import telebot
import sqlite3, datetime
from telebot import types


TOKEN = '1908684588:AAGxUE8Oj0IYycW-j2tfVXD_uTCNMCXhtTg'

bot = telebot.TeleBot(TOKEN)
chat_id = '534248630'
#grup_url = 'https://t.me/joinchat/LYpw-68R1iFmZjAy'


@bot.message_handler(commands=['start'])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(types.KeyboardButton('–û—Å—Ç–∞–≤—å—Ç–µ –∑–∞—è–≤–∫—É –º–∞—Å—Ç–µ—Ä—Éüõ†.'),
               types.KeyboardButton('–°–ø–∏—Å–æ–∫ —É—Å–ª—É–≥ –∏ —Ü–µ–Ω—ãüìã.'))

    bot.send_message(message.chat.id,
                     '–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –≤–∞—Å –≤ –Ω–∞—à–µ–π –º–∞—Å—Ç–µ—Ä—Å–∫–æ–π, {0.first_name}!'.format(
                         message.from_user), reply_markup=markup)
    return markup


@bot.message_handler(content_types=['text'])
def bot_message(message):
    if message.chat.type == 'private':
        if message.text == '–û—Å—Ç–∞–≤—å—Ç–µ –∑–∞—è–≤–∫—É –º–∞—Å—Ç–µ—Ä—Éüõ†.':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            back = types.KeyboardButton('–ù–∞–∑–∞–¥‚¨ÖÔ∏è.')
            markup.add(back)
            bot.forward_message(chat_id, message.chat.id,
                                message.message_id)
            bot.send_message(message.chat.id, '–í—ã –æ—Å—Ç–∞–≤–∏–ª–∏ –∑–∞—è–≤–∫—É –º–∞—Å—Ç–µ—Ä—É(–ø—Ä–∏—ë–º –∑–∞—è–≤–æ–∫ –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è –æ–¥–∏–Ω —Ä–∞–∑),'
                                              ' –º–æ–∂–µ—Ç–µ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å–æ —Å–ø–∏—Å–∫–æ–º –Ω–∞—à–∏—Ö —É—Å–ª—É–≥ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–∫–∏ –ù–∞–∑–∞–¥üëá',
                             reply_markup=markup)

            connect = sqlite3.connect('users.db')
            cursor = connect.cursor()

            cursor.execute("""CREATE TABLE IF NOT EXISTS login_id(
                            name INTEGER
                            )""")

            connect.commit()

            people_id = message.chat.id

            cursor.execute(f"SELECT name FROM login_id WHERE name = {people_id}")
            data = cursor.fetchone()
            if data is None:
                first_name = [message.chat.first_name]
                # user_name = [message.from_user.username]
                cursor.execute("INSERT INTO login_id VALUES(?);", first_name)
                connect.commit()
            else:
                bot.send_message(message.chat.id,
                                 '–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ, –∂–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç–∞.')
            connect.close()

        elif message.text == '–°–ø–∏—Å–æ–∫ —É—Å–ª—É–≥ –∏ —Ü–µ–Ω—ãüìã.':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            item1 = types.KeyboardButton('–†–µ–º–æ–Ω—Ç —Å—Ç–∏—Ä–∞–ª—å–Ω—ã—Ö –º–∞—à–∏–Ω:')
            item2 = types.KeyboardButton('–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞:')
            back = types.KeyboardButton('–ù–∞–∑–∞–¥‚¨ÖÔ∏è.')
            markup.add(item1, item2, back)

            bot.send_message(message.chat.id, '–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —É—Å–ª—É–≥:', reply_markup=markup)

        elif message.text == '–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞:':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            bot.send_message(message.chat.id,
            '–°—Ç–æ–∏–º–æ—Å—Ç—å –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ 20 —Ä—É–±–ª–µ–π '
            '\n(–æ–ø–ª–∞—á–∏–≤–∞–µ—Ç—Å—è –≤ —Å–ª—É—á–∞–µ –æ—Ç–∫–∞–∑–∞ –æ—Ç —Ä–µ–º–æ–Ω—Ç–∞ –∏–ª–∏ –Ω–µ —Ü–µ–ª–µ—Å–æ–æ–±—Ä–∞–∑–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω–æ–≥–æ). '
            '\n–í —Å–ª—É—á–∞–µ —Ä–µ–º–æ–Ω—Ç–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∏ –≤—ã–µ–∑–¥ –º–∞—Å—Ç–µ—Ä–∞ –ë–ï–°–ü–õ–ê–¢–ù–û!!!!',
                             reply_markup=markup)

        elif message.text == '–†–µ–º–æ–Ω—Ç —Å—Ç–∏—Ä–∞–ª—å–Ω—ã—Ö –º–∞—à–∏–Ω:':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            bot.send_message(message.chat.id, '–†–µ–º–æ–Ω—Ç —Å—Ç–∏—Ä–∞–ª—å–Ω—ã—Ö –º–∞—à–∏–Ω –≤—Å–µ—Ö –º–∞—Ä–æ–∫ –≤ –ú–∏–Ω—Å–∫–µ.'
                             '\n–í—ã–µ–∑–¥ –∏ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ë–ï–°–ü–õ–ê–¢–ù–û (–ø—Ä–∏ —É—Å–ª–æ–≤–∏–∏ –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ —Ä–µ–º–æ–Ω—Ç–∞)'
                             '\n–ü—Ä–æ–∏–∑–≤–æ–∂—É —Ä–∞–±–æ—Ç—ã –ø–æ —Ä–µ–º–æ–Ω—Ç—É —Å—Ç–∏—Ä–∞–ª—å–Ω—ã—Ö –º–∞—à–∏–Ω:–∑–∞–º–µ–Ω–∞ '
                             '\n–ø–æ–¥—à–∏–ø–Ω–∏–∫–æ–≤ (–≥—Ä–µ–º–∏—Ç,—Å—Ç—É—á–∏—Ç, –≥—É–¥–∏—Ç)'
                             '\n* –∑–∞–º–µ–Ω–∞ –Ω–∞—Å–æ—Å–∞ (–Ω–µ—Ç —Å–ª–∏–≤–∞ –≤–æ–¥—ã,–≤—ã–±–∏–≤–∞–µ—Ç –æ—à–∏–±–∫—É)'
                             '\n* –∑–∞–º–µ–Ω–∞ —â—ë—Ç–æ–∫ —ç–ª–µ–∫—Ç—Ä–æ–¥–≤–∏–≥–∞—Ç–µ–ª—è (–¥–≤–∏–≥–∞—Ç–µ–ª—å –Ω–µ —Ö–æ—á–µ—Ç –∫—Ä—É—Ç–∏—Ç—å –±–∞—Ä–∞–±–∞–Ω, –±—å—ë—Ç –æ—à–∏–±–∫—É, –Ω–µ –≤—ã—Ö–æ–¥–∏—Ç –Ω–∞ –æ—Ç–∂–∏–º)'
                             '\n* –∑–∞–º–µ–Ω–∞ –¢–≠–ù–∞ (–Ω–∞–≥—Ä–µ–≤–∞—Ç–µ–ª—å–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞) ‚Äî (–≤—ã–±–∏–≤–∞–µ—Ç —É–∑–æ, –Ω–µ –≥—Ä–µ–µ—Ç—Å—è –≤–æ–¥–∞, –ø—Ä–æ–≥—Ä–∞–º–∞—Ç–æ—Ä —Ö–æ–¥–∏—Ç –ø–æ –∫—Ä—É–≥—É, –∑–∞–≤–∏—Å–∞–µ—Ç –≤—Ä–µ–º—è)'
                             '\n* –∑–∞–º–µ–Ω–∞ –±–ª–æ–∫–∏—Ä–∞—Ç–æ—Ä–∞ –¥–≤–µ—Ä–∏ (–Ω–µ –∑–∞–∫—Ä—ã–≤–∞–µ—Ç—Å—è –ª—é–∫, –¥–≤–µ—Ä—å)'
                             '—Ä–µ–º–æ–Ω—Ç —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–≥–æ –±–ª–æ–∫–∞ (–∑–∞–ø–∞—Ö –≥–∞—Ä–∏, –Ω–µ –≤–∫–ª—é—á–∞–µ—Ç—Å—è, –≤—ã–¥–∞—ë—Ç –æ—à–∏–±–∫—É)'
                             '\n* –∑–∞–º–µ–Ω–∞ —É–ø–ª–æ—Ç–Ω–∏—Ç–µ–ª—å–Ω–æ–π —Ä–µ–∑–∏–Ω—ã ‚Äî –º–∞–Ω–∂–µ—Ç—ã ‚Äî –ª—é–∫–∞ (–ø–æ–¥—Ç–µ–∫–∞–µ—Ç, –ø–æ—Ä–≤–∞–Ω–∞)'
                             '\n—Ä–µ–º–æ–Ω—Ç —ç–ª–µ–∫—Ç—Ä–æ–¥–≤–∏–≥–∞—Ç–µ–ª—è (–∑–∞–ø–∞—Ö –≥–∞—Ä–∏, –Ω–µ—Ç –æ—Ç–∂–∏–º–∞, —Å–ª–∞–±–æ–µ –≤—Ä–∞—â–µ–Ω–∏–µ –±–∞—Ä–∞–±–∞–Ω–∞)'
                             '\n* –∑–∞–º–µ–Ω–∞ —Ç—Ä—É–±–æ–∫, —Ä—É—á–µ–∫, –∫–ª–∞–ø–∞–Ω–æ–≤, –¥–∞—Ç—á–∏–∫–æ–≤ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã, –¥–∞—Ç—á–∏–∫–æ–≤ —É—Ä–æ–≤–Ω—è –≤–æ–¥—ã, –ø—Ä–æ–≤–æ–¥–∫–∏, –ª–æ—Ç–∫–æ–≤, —Å—Ç—ë–∫–æ–ª, —à–ª–∞–Ω–≥–æ–≤, –ø–µ—Ç–ª–∏ –ª—é–∫–∞ –∏ –¥—Ä—É–≥–æ–µ.'
                             '\n–ú–∞—Ä–∫–∏ —Ä–µ–º–æ–Ω—Ç–∏—Ä—É–µ–º—ã—Ö –º–∞—à–∏–Ω :'
                             '\nSamsung (–°–∞–º—Å—É–Ω–≥), LG (–õ–ñ –≠–ª–¥–∂–∏), Ardo (–ê—Ä–¥–æ), Indesit (–ò–Ω–¥–µ–∑–∏—Ç)'
                             '\nHotpoint-Ariston (–•–æ—Ç–ø–æ–∏–Ω—Ç –ê—Ä–∏—Å—Ç–æ–Ω), Bosch (–ë–æ—à), Zanussi (–ó–∞–Ω—É—Å—Å–∏)'
                             '\nAEG (–ê–ï–ì), Electrolux (–≠–ª–µ–∫—Ç—Ä–æ–ª—é–∫—Å), Siemens (–°–∏–º–µ–Ω—Å), Candy (–ö–∞–Ω–¥–∏)'
                             '\nWhirlpool (–í–∏—Ä–ø—É–ª), Iberna (–ò–±–µ—Ä–Ω–∞), Gorenje (–ì–æ—Ä–µ–Ω—å–µ), Beko (–ë–µ–∫–æ)'
                             '\nHansa (–•–∞–Ω—Å–∞), Atlant (–ê—Ç–ª–∞–Ω—Ç), Miele (–ú–∏–ª–ª–∏), Hoover (–•—É–≤–µ—Ä)'
                             '\nZerowatt (–ó–µ—Ä–æ–≤–∞—Ç—Ç), Bauknecht (–ë–∞—É–∫—Ö–Ω–µ—Ö—Ç), Fagor (–§–∞–≥–æ—Ä), Haier (–•–∞–µ—Ä)'
                             '\nKaiser(–ö–∞–π–∑–µ—Ä), NEFF (–ù–µ—Ñ—Ñ), Panasonic (–ü–∞–Ω–∞—Å–æ–Ω–∏–∫), De Dietrich (–î–µ –î–∏—Ç—Ä–∏—Ö)'
                             '\nIT Wash (–ò–¢ –í–æ—à, –ê–π—Ç–∏ –í–æ—à), Korting (–ö–µ—Ä—Ç–∏–Ω–≥), Brandt (–ë—Ä–∞–Ω–¥)'
                             '\nEurosoba (–ï–≤—Ä–æ—Å–æ–±–∞), Hitachi (–•–∏—Ç–∞—á–∏), Kuppersberg (–ö—É–ø–ø–µ—Ä—Å–±–µ—Ä–≥)'
                             '\nKuppersbusch (–ö—É–ø–ø–µ—Ä—Å–±—É—à), Smeg (–°–º–µ–≥), Asko (–ê—Å–∫–æ).'
                             '\n–°–≤—è–∂–∏—Ç–µ—Å—å —Å–æ –º–Ω–æ–π –∏ —è –í–∞–º –≤—Å—ë —Ä–∞–∑—ä—è—Å–Ω—é.'
                             '\n–Ø —Ü–µ–Ω—é –∫–∞–∂–¥–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞.',
                             reply_markup=markup)

        elif message.text == '–ù–∞–∑–∞–¥‚¨ÖÔ∏è.':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            item1 = types.KeyboardButton('–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É –º–∞—Å—Ç–µ—Ä—Éüõ†.')
            item2 = types.KeyboardButton('–°–ø–∏—Å–æ–∫ —É—Å–ª—É–≥ –∏ —Ü–µ–Ω—ãüìã.')

            markup.add(item1, item2)

            bot.send_message(message.chat.id,
                             '–í—ã–±–µ—Ä–µ—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å —Ä–∞–∑–¥–µ–ª, {0.first_name}!'.format(
                                 message.from_user), reply_markup=markup)


bot.polling(none_stop=True, interval=0)



